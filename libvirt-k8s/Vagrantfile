# -*- mode: ruby -*-
# vi: set ft=ruby :

$nodes_count = 3
$vm_memory = 2024
$vm_cpus = 2
$instance_name_prefix = "v"
$master_ip = "10.10.10.100"

# Packages versions
$kubernetes_version = "v1.16.2"
$docker_package_name = "docker-ce=18.06.2~ce~3-0~ubuntu"

# Token
$kubernetes_token = "wl6ndy.vyaag8hxsnfikwyb"

Vagrant.configure("2") do |config|
    config.vagrant.plugins = "vagrant-scp"
    config.vm.box = "generic/ubuntu1804"
    config.vm.box_check_update = false

    config.vm.provision "shell", path: "provision.sh", env: {:DOCKER_PACKAGE_NAME => $docker_package_name}

    (0..$nodes_count).each do |i|
        config.vm.define vm_name = "%s-%02d" % [$instance_name_prefix, i] do |node|
            node.vm.hostname = "%s-%02d" % [$instance_name_prefix, i]

            node.vm.provider :virt do |v|
                v.gui = false
                v.memory = $vm_memory
                v.cpus = $vm_cpus
            end

            if i == 0 #1 isMaster
                node.vm.network :private_network, ip: $master_ip
                node.vm.provision "shell", path: "init_master.sh", env: {:MASTER_IP => $master_ip, :KUBERNETES_VERSION => $kubernetes_version, :KUBERNETES_TOKEN => $kubernetes_token}
            else
                ip = "10.10.10.#{i+110}"
                node.vm.network :private_network, ip: ip
                node.vm.provision "shell", path: "init_node.sh", env: {:MASTER_IP => $master_ip, :KUBERNETES_TOKEN => $kubernetes_token}
            end
        end
    end
end
